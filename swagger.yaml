swagger: '2.0'

info:
  version: "0.0.0"
  title: Nyancast API
tags:
  - name: podcast
    description: Podcast operations
  - name: episode
    description: Podcasts' episode operations 
  - name: user
    description: User operations
  - name: admin
    description: Admin operations
paths:
  /search:
    get:
      tags:
        - podcast
      summary: Query Itunes search API and return found podcasts
      parameters:
        -
          name: q
          in: query
          description: Search terms
          required: true
          type: string
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/PodcastListSearch'
        204:
          description: No results
        400:
          description: Missing q parameter
        503:
          description: Problem contacting Itunes search API
          
  /promotions:
    get:
      tags:
        - podcast
      summary: Get promoted podcasts
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Podcast'
        204:
          description: No promoted podcasts


  /podcast/{id}:
    get:
      tags:
        - podcast
      summary: Get informations about a podcast
      description: |
        This can trigger an Itunes request if the podcast doesn't exists in the local database.
        Property "isSubscribed" is only present in response when user is logged in
      parameters:
        -
          name: id
          in: path
          description: Itunes podcast id
          required: true
          type: integer
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Podcast'
        400:
          description: Missing/wrong parameter id
        404:
          description: No podcast found for specified id
        503:
          description: Problem contacting Itunes search API

  /podcast/{id}/episodes:
    get:
      tags:
        - podcast
      summary: Get episodes of a podcast
      description: |
        By default, the latest 20 episodes (if available) are sent to the client.
        Property "playingStatus" is only present in response when user is logged in.

        Values of "playingStatus" can be "played", "unplayed", "playing".
        If playingStatus equals to "playing" property "playingTimer" is also present.

        Property "duration" might not be present, if unavailable from RSS feed.
      parameters:
        -
          name: id
          in: path
          description: Itunes podcast id
          required: true
          type: integer
        -
          name: p
          in: query
          description: Page
          required: false
          type: integer
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              moreToLoad:
                type: boolean
              episodes:
                type: array
                items:
                  $ref: '#/definitions/Episode'
        400:
          description: Missing/wrong parameter id
        404:
          description: No podcast found for specified id

  /podcast/{id}/subscribe:
    post:
      tags:
        - podcast
      summary: Subscribe a user to a podcast
      parameters:
        -
          name: id
          in: path
          description: Itunes podcast id
          required: true
          type: integer
      responses:
        200:
          description: Subscription successful
        304:
          description: User is already subscribed to the podcast
        400:
          description: Missing/wrong parameter id
        401:
          description: User is not logged in
        404:
          description: No podcast found for specified id

  /podcast/{id}/unsubscribe:
    post:
      tags:
        - podcast
      summary: Unsubscribe a user to a podcast
      parameters:
        -
          name: id
          in: path
          description: Itunes podcast id
          required: true
          type: integer
      responses:
        200:
          description: Unsubscription successful
        304:
          description: User is not subscribed to the podcast
        400:
          description: Missing/wrong parameter id
        401:
          description: User is not logged in
        404:
          description: No podcast found for specified id
          
  /podcast/{id}/promotion:
    post:
      tags:
        - admin
      summary: Promote a podcast to front page
      parameters:
        -
          name: id
          in: path
          description: Itunes podcast id
          required: true
          type: integer
      responses:
        200:
          description: Promotion successful
        400:
          description: Missing/wrong parameter id
        401:
          description: User is not logged in
        403:
          description: User doesn't have the right to do this
        404:
          description: No podcast found for specified id
    delete:
      tags:
        - admin
      summary: Delete a front page promotion
      parameters:
        -
          name: id
          in: path
          description: Itunes podcast id
          required: true
          type: integer
      responses:
        200:
          description: Promotion removal successful
        400:
          description: Missing/wrong parameter id
        401:
          description: User is not logged in
        403:
          description: User doesn't have the right to do this
        404:
          description: No podcast found for specified id
      
          

  /episode/{id}/update_status:
    post:
      tags:
        - episode
      summary: Update playing status of an episode
      description: |
        User have to be logged in, and subscribed to the episodes' podcast.
      parameters:
        -
          name: id
          in: path
          description: Episode id
          required: true
          type: integer
        -
          name: playingTimer
          in: query
          description: Playing timer
          required: false
          type: integer
        - 
          name: status
          in: query
          description: New playing status
          required: true
          type: string
          enum: [played, unplayed, playing]
      responses:
        200:
          description: Status update successful
        304:
          description: Status unchanged
        400:
          description: Missing/wrong parameters, or user not subscribed to podcast
        401:
          description: User is not logged in
        404:
          description: No episode found for specified id

  /user:
    get:
      tags:
        - user
      summary: Get the current user
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/User'
        401:
          description: User is not logged in

  /user/subscriptions:
    get:
      tags:
        - user
      summary: Get list of podcasts the user is subscribed to
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/PodcastListSub'
        204:
          description: No subscriptions
        401:
          description: User is not logged in

  /user/signup:
    post:
      tags:
        - user
      summary: Create a new user
      parameters:
        -
          name: username
          in: query
          description: Username must be greater or equals to 4
          required: true
          type: string
        -
          name: password
          in: query
          description: Password must be greater or equals to 8
          required: true
          type: string
      responses:
        200:
          description: Successful response. New user has been created
        400:
          description: Missing/wrong parameter (username/password)
        409:
          description: Username is already used

  /user/logout:
    post:
      tags:
        - user
      summary: Log out user
      responses:
        200:
          description: Successful response. User is log out

  /user/login:
    post:
      tags:
        - user
      summary: Log in user
      parameters:
        -
          name: username
          in: query
          required: true
          type: string
        -
          name: password
          in: query
          required: true
          type: string
      responses:
        200:
          description: Successful response. User is connected
          schema:
            $ref: '#/definitions/User'
        403:
          description: Username/password are invalid

definitions:
  PodcastListSearch:
    type: object
    properties:
      itunesId:
        type: integer
      title:
        type: string
      author:
        type: string
      thumbnailURL:
        type: string

  PodcastListSub:
    type: object
    properties:
      itunesId:
        type: integer
      title:
        type: string
      author:
        type: string
      thumbnailURL:
        type: string
      notPlayedEpisodes:
        type: integer

  Podcast:
    type: object
    properties:
      itunesId:
        type: integer
      title:
        type: string
      author:
        type: string
      thumbnailURL:
        type: string
      description:
        type: string
      websiteURL:
        type: string
      isSubscribed:
        type: boolean

  Episode:
    type: object
    properties:
      id:
        type: integer
      title:
        type: string
      fileURL:
        type: string
      description:
        type: string
      date:
        type: string
      duration:
        type: integer
      playingStatus:
        type: string
        enum: [played, unplayed, playing]
      playingTimer:
        type: integer

  User:
    type: object
    properties:
      username:
        type: string
      type:
        type: string
        enum: [user, admin]
